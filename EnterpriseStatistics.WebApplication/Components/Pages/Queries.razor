@page "/queries"
@using System.Globalization;
@inject HttpClient Http

<PageTitle>Query</PageTitle>

<h1>Запросы</h1>

<div class="task-container">
    
    <div class="header-container">
        <h5>Вывести все сведения о конкретном предприятии. ОГРН:</h5>
        <select id="testCity" @bind="_selectOGRN">
            @foreach (var enterprise in _enterprise)
            {
                <option>@enterprise.MainStateRegistrationNumber</option>
            }
        </select>
        <div class="button-container">
            <Button class="get-task-result" Color="Blazorise.Color.Primary" Clicked="@(() => ClickHandler(1))">
                Выполнить
            </Button>
            <Button class="clear-task-result" Color="Blazorise.Color.Danger" Clicked="@(() => ClearTask(1))">
                Очистить
            </Button>
        </div>
    </div>

    @if (query1 != null)
    {
        <div class="result-container">
            <table class="table">
                <thead>
                    <tr>
                        <th>ОГРН</th>
                        <th>Название</th>
                        <th>Адрес</th>
                        <th>Телефон</th>
                        <th>Количество работников</th>
                        <th>Общая площадь</th>
                        <th>Тип отрасли</th>
                        <th>Форма собственности</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var enterprise in query1)
                    {
                        <tr>
                            <td>@enterprise.MainStateRegistrationNumber</td>
                            <td>@enterprise.Name</td>
                            <td>@enterprise.Address</td>
                            <td>@enterprise.Phone</td>
                            <td>@enterprise.EmployeeCount</td>
                            <td>@enterprise.TotalArea</td>
                            <td>@enterprise.IndustryType</td>
                            <td>@enterprise.OwnershipForm</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
<div class="task-container">
    <div class="header-container">
        <h5>Вывести всех поставщиков, поставивших сырье за заданный период,упорядочить по названию</h5>
        <label>Дата с: </label>
        <input type="date" id="date1" @bind="_startDate" />
        <label>Дата по: </label>
        <input type="date" id="date2" @bind="_endDate" />
        <div class="button-container">
            <Button class="get-task-result" Color="Blazorise.Color.Primary" Clicked="@(() => ClickHandler(2))">
                Выполнить
            </Button>
            <Button class="clear-task-result" Color="Blazorise.Color.Danger" Clicked="@(() => ClearTask(2))">
                Очистить
            </Button>
        </div>
    </div>
    
    @if (query2 != null)
    {
        <div class="result-container">
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>ФИО</th>
                        <th>Адрес</th>
                        <th>Телефон</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var supplier in query2)
                    {
                        <tr>
                            <td>@supplier.Id</td>
                            <td>@supplier.FullName</td>
                            <td>@supplier.Address</td>
                            <td>@supplier.Phone</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
<div class="task-container">
    <div class="header-container">
        <h5>Вывести количество предприятий, с которыми работает каждый поставщик</h5>
            <div class="button-container">
            <Button class="get-task-result" Color="Blazorise.Color.Primary" Clicked="@(() => ClickHandler(3))">
                Выполнить
            </Button>
            <Button class="clear-task-result" Color="Blazorise.Color.Danger" Clicked="@(() => ClearTask(3))">
                Очистить
            </Button>
        </div>
    </div>

    @if (query3 != null)
    {
        <div class="result-container">
            <table class="table">
                <thead>
                    <tr>
                        <th>Id поставщика</th>
                        <th>ФИО поставщика</th>
                        <th>Количество предприятий</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var supplier in query3)
                    {
                        <tr>
                            <td>@supplier.SupplierId</td>
                            <td>@supplier.FullName</td>
                            <td>@supplier.EnterpriseCount</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
<div class="task-container">
    <div class="header-container">
    <h5>
        Вывести информацию о количестве поставщиков для каждого типа отрасли и форме собственности
    </h5>    
        <div class="button-container">
            <Button class="get-task-result" Color="Blazorise.Color.Primary" Clicked="@(() => ClickHandler(4))">
                Выполнить
            </Button>
            <Button class="clear-task-result" Color="Blazorise.Color.Danger" Clicked="@(() => ClearTask(4))">
                Очистить
            </Button>
        </div>
    </div>

    @if (query4 != null)
    {
        <div class="result-container">
            <table class="table">
                <thead>
                    <tr>
                        <th>Тип отрасли</th>
                        <th>Форма собственности</th>
                        <th>Количество поставщиков</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var supplierCount in query4)
                    {
                        <tr>
                            <td>@supplierCount.IndustryType</td>
                            <td>@supplierCount.OwnershipForm</td>
                            <td>@supplierCount.Count</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
<div class="task-container">
    <div class="header-container">
        <h5>Вывести топ 5 предприятий по количеству поставок</h5>
        <div class="button-container">
            <Button class="get-task-result" Color="Blazorise.Color.Primary" Clicked="@(() => ClickHandler(5))">
                Выполнить
            </Button>
            <Button class="clear-task-result" Color="Blazorise.Color.Danger" Clicked="@(() => ClearTask(5))">
                Очистить
            </Button>
        </div>
    </div>
    @if (query5 != null)
    {
        <div class="result-container">
            <table class="table">
                <thead>
                    <tr>
                        <th>ОГРН</th>
                        <th>Название</th>
                        <th>Адрес</th>
                        <th>Телефон</th>
                        <th>Количество работников</th>
                        <th>Общая площадь</th>
                        <th>Тип отрасли</th>
                        <th>Форма собственности</th>
                        <th>Количество поставок</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var supplyCount in query5)
                    {
                        <tr>
                            <td>@supplyCount.Enterprise.MainStateRegistrationNumber</td>
                            <td>@supplyCount.Enterprise.Name</td>
                            <td>@supplyCount.Enterprise.Address</td>
                            <td>@supplyCount.Enterprise.Phone</td>
                            <td>@supplyCount.Enterprise.EmployeeCount</td>
                            <td>@supplyCount.Enterprise.TotalArea</td>
                            <td>@supplyCount.Enterprise.IndustryType</td>
                            <td>@supplyCount.Enterprise.OwnershipForm</td>
                            <td>@supplyCount.SupplyCount</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
<div class="task-container">
    <div class="header-container">
    <h5>
        Вывести информацию о поставщиках, поставивших максимальное количество товара за указанный период
    </h5>
        <label>Дата с: </label>
        <input type="date" id="date3" @bind="_startDate" />
        <label>Дата по: </label>
        <input type="date" id="date4" @bind="_endDate" />
    <div class="button-container">
        <Button class="get-task-result" Color="Blazorise.Color.Primary" Clicked="@(() => ClickHandler(6))">
            Выполнить
        </Button>
        <Button class="clear-task-result" Color="Blazorise.Color.Danger" Clicked="@(() => ClearTask(6))">
            Очистить
        </Button>
    </div>
    </div>

    @if (query6 != null)
    {
        <div class="result-container">
            
            <div class="result-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Id поставщика</th>
                            <th>ФИО</th>
                            <th>Адрес</th>
                            <th>Телефон</th>
                            <th>Количество товара</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var supplyCount in query6)
                        {
                            <tr>
                                <td>@supplyCount.Supplier.Id</td>
                                <td>@supplyCount.Supplier.FullName</td>
                                <td>@supplyCount.Supplier.Phone</td>
                                <td>@supplyCount.Supplier.Address</td>
                                <td>@supplyCount.TotalQuantity</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            
        </div>
    }
</div>


@code {
    private List<Enterprise> _enterprise = new();
    private List<Supplier> _suppliers = new();
    private List<Supply> _supplies = new();

    private ulong _selectOGRN = 0;
    private DateTime _startDate = DateTime.ParseExact("01.01.2024", "dd.MM.yyyy", CultureInfo.InvariantCulture);
    private DateTime _endDate = DateTime.ParseExact("01.01.2024", "dd.MM.yyyy", CultureInfo.InvariantCulture);

    private List<Enterprise> query1 = null!;
    private List<Supplier> query2 = null!;
    private List<EnterpriseCountsDto> query3 = null!;
    private List<SupplierCountIndustryOwnershipDto> query4 = null!;
    private List<EnterprisesSupplyCountDto> query5 = null!;
    private List<SuppliersWithMaxSupplyDto> query6 = null!;

    private async Task GetEnterprises()
    {
        var response = await Http.GetFromJsonAsync<List<Enterprise>>("api/Enterprise");
        if (response != null)
        {
            _enterprise = response;
            _selectOGRN = _enterprise.Select(e => e.MainStateRegistrationNumber).First();
        }
    }

    private async Task GetSuppliers()
    {
        var response = await Http.GetFromJsonAsync<List<Supplier>>("api/Supplier");
        if (response != null)
        {
            _suppliers = response;            
        }
    }

    private async Task GetSupplies()
    {
        var response = await Http.GetFromJsonAsync<List<Supply>>("api/Supply");
        if (response != null)
        {
            _supplies = response;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetEnterprises();
        await GetSuppliers();
        await GetSupplies();
    }

    private async Task ClickHandler(int queryId)
    {
        switch (queryId)
        {
            case 1:
                var response1 = await Http.GetFromJsonAsync<List<Enterprise>>("api/Query/info_specific_enterprise?mainStateRegistrationNumber=" + _selectOGRN);
                if (response1 != null)
                {
                    query1 = response1;
                }
                break;
            case 2:
                string formattedStartDate1 = _startDate.ToString("MM.dd.yyyy", CultureInfo.InvariantCulture);
                string formattedEndDate1 = _endDate.ToString("MM.dd.yyyy", CultureInfo.InvariantCulture);

                var response2 = await Http.GetFromJsonAsync<List<Supplier>>("api/Query/info_supplier_by_date?startDate= " + formattedStartDate1 + "&endDate=" + formattedEndDate1);
                if (response2 != null)
                {
                    query2 = response2;
                }
                break;
            case 3:
                var response3 = await Http.GetFromJsonAsync<List<EnterpriseCountsDto>>("api/Query/count_enterprise");
                if (response3 != null)
                {
                    query3 = response3;
                }
                break;
            case 4:
                var response4 = await Http.GetFromJsonAsync<List<SupplierCountIndustryOwnershipDto>>("api/Query/supplier_by_industy_and_ownership");
                if (response4 != null)
                {
                    query4 = response4;
                }
                break;
            case 5:
                var response5 = await Http.GetFromJsonAsync<List<EnterprisesSupplyCountDto>>("api/Query/top_5_enterprise");
                if (response5 != null)
                {
                    query5 = response5;
                }
                break;
            case 6:
                string formattedStartDate2 = _startDate.ToString("MM.dd.yyyy", CultureInfo.InvariantCulture);
                string formattedEndDate2 = _endDate.ToString("MM.dd.yyyy", CultureInfo.InvariantCulture);
                var response6 = await Http.GetFromJsonAsync<List<SuppliersWithMaxSupplyDto>>("api/Query/supplier_and_max_quantity_by_period?startDate= " + formattedStartDate2 + "&endDate=" + formattedEndDate2);
                if (response6 != null)
                {
                    query6 = response6;
                }
                break;
        }
    }
    private void ClearTask(int taskId)
    {
         switch (taskId)
            {
                case 1:
                    query1 = null!;
                    break;
                case 2:
                    query2 = null!;
                    break;
                case 3:
                    query3 = null!;
                    break;
                case 4:
                    query4 = null!;
                    break;
                case 5:
                    query5 = null!;
                    break;
                case 6:
                    query6 = null!;
                    break;
            }
    }
}
